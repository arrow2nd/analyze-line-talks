const regexp={date:/^\d{4}[\/\.]\d{1,2}[\/\.]\d{1,2}/,time:/\d{1,2}:\d{1,2}/,talk:/^(.*\d{1,2}:\d{1,2})[ \t](.*?)[ \t](.*)/};function isMessage(t){if(""===(t=t.trim()))return!1;const e=[/^\[LINE\].+とのトーク履歴/,/^\[.+\]$/,/通話時間 \d{1,2}:\d{1,2}/,/通話をキャンセルしました$/,/不在着信$/,/^.+がメッセージの送信を取り消しました$/,/.+を作成しました$/,/^イベント.+が.{2}されました/,/アルバムを.{2}しました/,/ノート[をに].{2}しました/,/アルバムに写真を追加しました/,/^\(emoji\)/,/https?:\/\//];for(const r of e)if(r.test(t))return!1;return!0}function to24Hour(t){const e=t.match(regexp.time)?.toString();return e?e.split(":").map(((e,r)=>{let n=parseInt(e.trim());return 0===r&&/^午後/.test(t)&&(n+=12),String(n).padStart(2,"0")})).join(":"):""}function fmtDate(t){const e=t.match(regexp.date)?.toString();return e?e.split(/[\/\.]/).map(((t,e)=>0===e?t:t.padStart(2,"0"))).join("/"):""}function parse(t){const e=t.split(/[\r\n]/).filter((t=>""!==t)),r=[];let n="",o="",s="",i="";for(const t of e){if(regexp.date.test(t)){n=fmtDate(t);continue}const e=t.match(regexp.talk)?.map((t=>t.trim()));e?(isMessage(i)&&r.push({date:n,time:o,user:s,message:i.replace(/(^\"|\"$)/g,"")}),o=to24Hour(e[1]),s=e[2].replace(/\t.*$/g,""),i=e[3]):regexp.time.test(t)||(i+=` ${t}`)}return r}function toJson(t){return JSON.stringify(parse(t),null,"\t")}export{parse};export{toJson};